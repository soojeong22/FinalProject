<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	
	<!-- mvc패턴에 사용되는 확장annotation -->
	<annotation-driven /> 
	<!-- 객체생성, 값주입(DI)를 자동화 해주는 annotation + mvc패턴의 기본 어노테이션이 포함되어 있다. -->
	<context:component-scan base-package="com.job.coverletter" />
	

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- 
		# 정적자원 설정 
		해당 경로로 get 요청이 들어오면 DispatcherServlet은 관여하지 않는다 
			>> 즉, 컨트롤러 매핑을 찾지 않고 해당 경로로 요청된 URL을 그대로 응답한다. (여기서는 : webapp/resources/.. )
		>>> ex) resources/css/main/main.css 라는 클라이언트의 요청이 들어오면 이것을 resources/css/..로 그대로 매핑시켜준다.
			(resources/ 를 꼭 붙여야함)
	 -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	
	<!-- logAop -->
	<aop:aspectj-autoproxy/> 
	<!-- 자동으로 AspectJ 라이브러리를 통해 Porxy객체를 생성한다 -->
	
	<!-- Interceptor -->
	<interceptors>
		<interceptor>
			<mapping path="/*"/> <!-- 어떤 경로로 들어왔을때 실행할지 메핑 -->
			<beans:bean class="com.job.coverletter.common.interceptor.LoginInterceptor"></beans:bean>
			<!-- 어떤 interceptor 클래스를 사용할지 -->
		</interceptor>
	</interceptors>
	
	
</beans:beans>
